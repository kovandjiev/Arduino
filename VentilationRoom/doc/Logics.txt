Base topic. Use it for broadcast. See first callback.
Device name. Example: room_name.

On and close a ventilation. For them switch relay 1 for open and 2 for close. 
The window ... duration is: 
 - Close 25 sec.
 - Open  23 sec.

After the device has started, first operation will be off the windodw (0).

Close window (/window/set:0) every time wait 30 sec.

If any gate is:
 - opened for more than (10 sec is time for normal going through the door) 20 sec publish topic /ventilate:on
 - closed for more than 20 sec publish topic /ventilate:off

topic:payload

Callback:
 base_topic:null - broadcast command, respond with base_topic/device_name:ok
 base_topic/device_name:null - respond with base_topic/device_name:ok
 base_topic/device_name:all - send all available data per deveice
 base_topic/device_name/window:null - respond with current window state
 base_topic/device_name/window/set:[0 (Closed), 1, 2, 3, 4 (Full opened)] - open/close a window
 base_topic/device_name/gate:null - respond with all gates state

Publish:
 base_topic/device_name:ready - The device has jet stated. This message need to send initialize settings from the remote server. It should publish: data from the server.
 base_topic/device_name/ventilate:[on | off] - open or close ventilation gates
 base_topic/device_name/window:[0 (Closed), 1,  2, 3, 4 (Full opened)] - open/close a window
 base_topic/device_name/gate/1:[open | close] - open or close a window/door 1 - It is default gate for window.
 base_topic/device_name/gate/2:[open | close] - open or close a window/door 2
 base_topic/device_name/gate/3:[open | close] - open or close a window/door 3
 base_topic/device_name/gate/4:[open | close] - open or close a window/door 4

For future test:
{
  "state": // "ok", "ready"
  "command": // 0 BaseCmd, 1 WindowCmd
  "action": // -1: result, 0: get, 1:set
  "window": // 0 (Closed), 1, 2, 3, 4 (Full opened)
  "ventilate": // 0, 1
  "gates":[
    "1": // 0 (close), 1 (open)
    "2": // 0 (close), 1 (open)
    "3": // 0 (close), 1 (open)
    "4": // 0 (close), 1 (open)
  ]
}